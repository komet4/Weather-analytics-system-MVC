// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WeatherAnalyticsSystem.Data;

#nullable disable

namespace WeatherAnalyticsSystem.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231024124700_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WeatherAnalyticsSystem.Models.Coord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Latitude")
                        .HasColumnType("double precision");

                    b.Property<double>("Longitude")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Coords");
                });

            modelBuilder.Entity("WeatherAnalyticsSystem.Models.Main", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Temp")
                        .HasColumnType("double precision");

                    b.Property<double>("Temp_max")
                        .HasColumnType("double precision");

                    b.Property<double>("Temp_min")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Mains");
                });

            modelBuilder.Entity("WeatherAnalyticsSystem.Models.Sys", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Syss");
                });

            modelBuilder.Entity("WeatherAnalyticsSystem.Models.Weather", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("DateTime")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("timestamp");

                    b.HasKey("Id");

                    b.ToTable("Weathers");
                });

            modelBuilder.Entity("WeatherAnalyticsSystem.Models.Weather", b =>
                {
                    b.HasOne("WeatherAnalyticsSystem.Models.Coord", "Coord")
                        .WithOne()
                        .HasForeignKey("WeatherAnalyticsSystem.Models.Weather", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherAnalyticsSystem.Models.Main", "Main")
                        .WithOne()
                        .HasForeignKey("WeatherAnalyticsSystem.Models.Weather", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeatherAnalyticsSystem.Models.Sys", "Sys")
                        .WithOne()
                        .HasForeignKey("WeatherAnalyticsSystem.Models.Weather", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coord");

                    b.Navigation("Main");

                    b.Navigation("Sys");
                });
#pragma warning restore 612, 618
        }
    }
}
